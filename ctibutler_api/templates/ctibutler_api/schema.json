{"openapi": "3.0.3", "info": {"title": "CTI Butler API", "version": "1.0.0", "description": "\nCTI Butler is a database of CVEs in STIX 2.1 format with a REST API wrapper to access them.\n\n\n[DOGESEC](https://www.dogesec.com/) offer a fully hosted web version of CTI Butler which includes many additional features over those in this codebase. [You can find out more about the web version here](https://www.ctibutler.com/).\n", "contact": {"email": "noreply@dogesec.com", "url": "https://github.com/muchdogesec/ctibutler"}}, "paths": {"/ctibutler_api/api/v1/atlas/objects/": {"get": {"operationId": "v1_atlas_objects_list", "description": "\nSearch and filter MITRE ATLAS objects.\n", "summary": "Search and filter MITRE ATLAS objects", "parameters": [{"in": "query", "name": "atlas_id", "schema": {"type": "array", "items": {"type": "string"}}, "description": "Filter the results by the ATLAS ID of the object. e.g. `AML.T0000.001`.", "explode": false, "style": "form"}, {"in": "query", "name": "atlas_version", "schema": {"type": "string"}, "description": "By default only the latest ATLAS version objects will be returned. You can enter a specific ATLAS version here. e.g. `4.5.2`. You can get a full list of versions on the GET ATLAS versions endpoint."}, {"in": "query", "name": "description", "schema": {"type": "string"}, "description": "Filter the results by the `description` property of the object. Search is a wildcard, so `exploit` will return all descriptions that contain the string `exploit`."}, {"in": "query", "name": "id", "schema": {"type": "array", "items": {"type": "string"}}, "description": "Filter the results using the STIX ID of an object. e.g. `attack-pattern--64db2878-ae36-46ab-b47a-f71fff575aba`, `x-mitre-tactic--6b232c1e-ada7-4cd4-b538-7a1ef6193e2f`.", "explode": false, "style": "form"}, {"in": "query", "name": "name", "schema": {"type": "string"}, "description": "Filter the results by the `name` property of the object. Search is a wildcard, so `exploit` will return all names that contain the string `exploit`."}, {"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "schema": {"type": "integer"}}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "schema": {"type": "integer"}}, {"in": "query", "name": "type", "schema": {"type": "string", "enum": ["attack-pattern", "course-of-action", "x-mitre-collection", "x-mitre-matrix", "x-mitre-tactic"]}, "description": "Filter the results by STIX Object type.\n\n"}], "tags": ["ATLAS"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedStixObjectsList"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/atlas/objects/{atlas_id}/": {"get": {"operationId": "v1_atlas_objects_list_2", "description": "\nGet an ATLAS object by its ID (e.g. `AML.TA0002`, `AML.T0000`).\n\nIf you do not know the ID of the object you can use the GET MITRE ATLAS Objects endpoint to find it.\n", "summary": "Get an ATLAS object", "parameters": [{"in": "path", "name": "atlas_id", "schema": {"type": "string"}, "description": "The ATLAS ID, e.g `AML.TA0002`, `AML.T0000`", "required": true}, {"in": "query", "name": "atlas_version", "schema": {"type": "string"}, "description": "Filter the results by the version of ATLAS"}, {"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "schema": {"type": "integer"}}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "schema": {"type": "integer"}}], "tags": ["ATLAS"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedStixObjectsList"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/atlas/objects/{atlas_id}/relationships/": {"get": {"operationId": "v1_atlas_objects_relationships_retrieve", "description": "\nThis endpoint will return all the STIX relationship objects where the ATLAS object is found as a `source_ref` or a `target_ref`.\n", "summary": "Get the Relationships linked to the MITRE ATLAS Object", "parameters": [{"in": "query", "name": "_arango_cti_processor_note", "schema": {"type": "string"}, "description": "Filter results by `_arango_cti_processor_note`"}, {"in": "path", "name": "atlas_id", "schema": {"type": "string"}, "description": "The ATLAS ID, e.g `AML.TA0002`, `AML.T0000`", "required": true}, {"in": "query", "name": "atlas_version", "schema": {"type": "string"}, "description": "Filter the results by the version of ATLAS"}, {"in": "query", "name": "include_embedded_refs", "schema": {"type": "boolean"}, "description": "\nIf `ignore_embedded_relationships` is set to `false` in the POST request to download data, stix2arango will create SROS for embedded relationships (e.g. from `created_by_refs`). You can choose to show them (`true`) or hide them (`false`) using this parameter. Default value if not passed is `true`.\n"}, {"in": "query", "name": "page", "schema": {"type": "integer"}, "description": "A page number within the paginated result set."}, {"in": "query", "name": "page_size", "schema": {"type": "integer"}, "description": "Number of results to return per page."}, {"in": "query", "name": "relationship_direction", "schema": {"type": "string", "enum": ["source_ref", "target_ref"]}, "description": "\nFilters the results to only include SROs which have this object in the specified SRO property (e.g. setting `source_ref` will only return SROs where the object is shown in the `source_ref` property). Default is both.\n"}, {"in": "query", "name": "relationship_type", "schema": {"type": "string"}, "description": "filter by the `relationship_type` of the STIX SROs returned."}], "tags": ["ATLAS"], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "required": ["page_results_count", "relationships"], "properties": {"page_size": {"type": "integer", "example": 50}, "page_number": {"type": "integer", "example": 3}, "page_results_count": {"type": "integer", "example": 50}, "total_results_count": {"type": "integer", "example": 2500}, "relationships": {"type": "array", "items": {"type": "object", "properties": {"type": {"example": "relationship"}, "id": {"example": "relationship--a86627d4-285b-5358-b332-4e33f3ec1075"}}, "additionalProperties": true}}}}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/atlas/objects/{atlas_id}/versions/": {"get": {"operationId": "v1_atlas_objects_versions_list", "description": "\nThis endpoint will show the STIX versions of the object (`modified` property) and what ATLAS versions it appears in.\n\nThe data returned is useful to see when and object has changed.\n", "summary": "See all versions of the ATLAS object", "parameters": [{"in": "path", "name": "atlas_id", "schema": {"type": "string"}, "description": "The ATLAS ID, e.g `AML.TA0002`, `AML.T0000`", "required": true}], "tags": ["ATLAS"], "responses": {"200": {"content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/MitreObjectVersions"}}}}, "description": ""}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/atlas/versions/": {"get": {"operationId": "v1_atlas_versions_retrieve", "description": "\nIt is possible to import multiple versions of ATLAS using the POST MITRE ATLAS endpoint. By default, all endpoints will only return the latest version of ATLAS objects (which generally suits most use-cases).\n\nThis endpoint allows you to see all imported versions of MITRE ATLAS available to use, and which version is the latest (the default version for the objects returned).\n", "summary": "See available ATLAS versions", "tags": ["ATLAS"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MitreVersions"}}}, "description": ""}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/attack-enterprise/objects/": {"get": {"operationId": "v1_attack_enterprise_objects_list", "description": "\nSearch and filter MITRE ATT&CK {matrix_name_human} objects.\n\nMITRE ATT&CK objects map to STIX objects as follows\n\n* Collection: `x-mitre-collection`\n* Matrix: `x-mitre-matrix`\n* Tactic: `x-mitre-tactic`\n* Techniques: `attack-pattern`\n* Sub-techniques: `attack-pattern` where `x_mitre_is_subtechnique = true` (Enterprise, Mobile only)\n* Mitigation: `course-of-action`\n* Groups: `intrusion-set`\n* Software (malicious): `malware`\n* Software (benign): `tool` (Enterprise, Mobile only)\n* Campaign: `campaign`\n* Data Source: `x-mitre-data-source`\n* Data Component: `x-mitre-data-component`\n* Asset: `x-mitre-asset` (ICS only)\n* Identity: `identity` (for MITRE and DOGESEC)\n* Marking definitions: `marking-definitions` for TLPs (v1) and copyright statements\n", "summary": "Search and filter MITRE ATT&CK Enterprise objects", "parameters": [{"in": "query", "name": "alias", "schema": {"type": "string"}, "description": "Filter the results by the `x_mitre_aliases` property of the object. Search is a wildcard, so `sun` will return all objects with x_mitre_aliases that contains the string `sun`, e.g `SUNBURST`."}, {"in": "query", "name": "attack_id", "schema": {"type": "array", "items": {"type": "string"}}, "description": "The ATT&CK IDs of the object wanted. e.g. `T1659`, `TA0043`, `S0066`.", "explode": false, "style": "form"}, {"in": "query", "name": "attack_version", "schema": {"type": "string"}, "description": "By default only the latest ATT&CK version objects will be returned. You can enter a specific ATT&CK version here. e.g. `13.1`. You can get a full list of versions on the GET ATT&CK versions endpoint."}, {"in": "query", "name": "description", "schema": {"type": "string"}, "description": "Filter the results by the `description` property of the object. Search is a wildcard, so `exploit` will return all descriptions that contain the string `exploit`."}, {"in": "query", "name": "id", "schema": {"type": "array", "items": {"type": "string"}}, "description": "Filter the results using the STIX ID of an object. e.g. `attack-pattern--0042a9f5-f053-4769-b3ef-9ad018dfa298`, `malware--04227b24-7817-4de1-9050-b7b1b57f5866`.", "explode": false, "style": "form"}, {"in": "query", "name": "include_deprecated", "schema": {"type": "boolean"}, "description": "By default all objects with `x_mitre_deprecated` are ignored. Set this to `true` to include them."}, {"in": "query", "name": "include_revoked", "schema": {"type": "boolean"}, "description": "By default all objects with `revoked` are ignored. Set this to `true` to include them."}, {"in": "query", "name": "name", "schema": {"type": "string"}, "description": "Filter the results by the `name` property of the object. Search is a wildcard, so `exploit` will return all names that contain the string `exploit`."}, {"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "schema": {"type": "integer"}}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "schema": {"type": "integer"}}, {"in": "query", "name": "type", "schema": {"type": "string", "enum": ["attack-pattern", "campaign", "course-of-action", "identity", "intrusion-set", "malware", "marking-definition", "tool", "x-mitre-data-component", "x-mitre-data-source", "x-mitre-matrix", "x-mitre-tactic"]}, "description": "Filter the results by STIX Object type.\n\n"}], "tags": ["ATT&CK Enterprise"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedStixObjectsList"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/attack-enterprise/objects/{attack_id}/": {"get": {"operationId": "v1_attack_enterprise_objects_list_2", "description": "\nGet a MITRE ATT&CK {matrix_name_human} object by its MITRE ATT&CK ID (e.g. `T1659`, `TA0043`, `S0066`).\n\nIf you do not know the ID of the object you can use the GET MITRE ATT&CK {matrix_name_human} Objects endpoint to find it.\n", "summary": "Get a specific MITRE ATT&CK Enterprise object by its ID", "parameters": [{"in": "path", "name": "attack_id", "schema": {"type": "string"}, "description": "The ATT&CK ID, e.g `T1659`, `TA0043`, `S0066`", "required": true}, {"in": "query", "name": "attack_version", "schema": {"type": "string"}, "description": "By default only the latest ATT&CK version objects will be returned. You can enter a specific ATT&CK version here. e.g. `13.1`. You can get a full list of versions on the GET ATT&CK versions endpoint."}, {"in": "query", "name": "include_deprecated", "schema": {"type": "boolean"}, "description": "By default all objects with `x_mitre_deprecated` are ignored. Set this to `true` to include them."}, {"in": "query", "name": "include_revoked", "schema": {"type": "boolean"}, "description": "By default all objects with `revoked` are ignored. Set this to `true` to include them."}, {"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "schema": {"type": "integer"}}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "schema": {"type": "integer"}}], "tags": ["ATT&CK Enterprise"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedStixObjectsList"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/attack-enterprise/objects/{attack_id}/relationships/": {"get": {"operationId": "v1_attack_enterprise_objects_relationships_retrieve", "description": "\nThis endpoint will return all the STIX `relationship` objects where the ATT&CK object is found as a `source_ref` or a `target_ref`.\n\nIf you want to see an overview of how MITRE ATT&CK objects are linked, [see this diagram](https://miro.com/app/board/uXjVKBgHZ2I=/).\n\nMITRE ATT&CK Enterprise objects can also be `target_ref` from CAPECs objects. Requires POST arango-cti-processor request using `capec-attack` mode for this data to show.\n", "summary": "Get the Relationships linked to the MITRE ATT&CK Enterprise Object", "parameters": [{"in": "query", "name": "_arango_cti_processor_note", "schema": {"type": "string"}, "description": "Filter results by `_arango_cti_processor_note`"}, {"in": "path", "name": "attack_id", "schema": {"type": "string"}, "description": "The ATT&CK ID, e.g `T1659`, `TA0043`, `S0066`", "required": true}, {"in": "query", "name": "attack_version", "schema": {"type": "string"}, "description": "By default only the latest ATT&CK version objects will be returned. You can enter a specific ATT&CK version here. e.g. `13.1`. You can get a full list of versions on the GET ATT&CK versions endpoint."}, {"in": "query", "name": "include_deprecated", "schema": {"type": "boolean"}, "description": "By default all objects with `x_mitre_deprecated` are ignored. Set this to `true` to include them."}, {"in": "query", "name": "include_embedded_refs", "schema": {"type": "boolean"}, "description": "\nIf `ignore_embedded_relationships` is set to `false` in the POST request to download data, stix2arango will create SROS for embedded relationships (e.g. from `created_by_refs`). You can choose to show them (`true`) or hide them (`false`) using this parameter. Default value if not passed is `true`.\n"}, {"in": "query", "name": "include_revoked", "schema": {"type": "boolean"}, "description": "By default all objects with `revoked` are ignored. Set this to `true` to include them."}, {"in": "query", "name": "page", "schema": {"type": "integer"}, "description": "A page number within the paginated result set."}, {"in": "query", "name": "page_size", "schema": {"type": "integer"}, "description": "Number of results to return per page."}, {"in": "query", "name": "relationship_direction", "schema": {"type": "string", "enum": ["source_ref", "target_ref"]}, "description": "\nFilters the results to only include SROs which have this object in the specified SRO property (e.g. setting `source_ref` will only return SROs where the object is shown in the `source_ref` property). Default is both.\n"}, {"in": "query", "name": "relationship_type", "schema": {"type": "string"}, "description": "filter by the `relationship_type` of the STIX SROs returned."}], "tags": ["ATT&CK Enterprise"], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "required": ["page_results_count", "relationships"], "properties": {"page_size": {"type": "integer", "example": 50}, "page_number": {"type": "integer", "example": 3}, "page_results_count": {"type": "integer", "example": 50}, "total_results_count": {"type": "integer", "example": 2500}, "relationships": {"type": "array", "items": {"type": "object", "properties": {"type": {"example": "relationship"}, "id": {"example": "relationship--a86627d4-285b-5358-b332-4e33f3ec1075"}}, "additionalProperties": true}}}}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/attack-enterprise/objects/{attack_id}/versions/": {"get": {"operationId": "v1_attack_enterprise_objects_versions_list", "description": "\nThis endpoint will show the STIX versions of the object (`modified` property) and what MITRE ATT&CK versions it appears in.\n\nThe data returned is useful to see when and object has changed.\n", "summary": "See all version of the MITRE ATT&CK Enterprise object", "parameters": [{"in": "path", "name": "attack_id", "schema": {"type": "string"}, "description": "The ATT&CK ID, e.g `T1659`, `TA0043`, `S0066`", "required": true}, {"in": "query", "name": "include_deprecated", "schema": {"type": "boolean"}, "description": "By default all objects with `x_mitre_deprecated` are ignored. Set this to `true` to include them."}, {"in": "query", "name": "include_revoked", "schema": {"type": "boolean"}, "description": "By default all objects with `revoked` are ignored. Set this to `true` to include them."}], "tags": ["ATT&CK Enterprise"], "responses": {"200": {"content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/MitreObjectVersions"}}}}, "description": ""}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/attack-enterprise/versions/": {"get": {"operationId": "v1_attack_enterprise_versions_retrieve", "description": "\nIt is possible to import multiple versions of ATT&CK using the POST MITRE ATT&CK {matrix_name_human} endpoint. By default, all endpoints will only return the latest version of ATT&CK objects (which generally suits most use-cases).\n\nThis endpoint allows you to see all imported versions of MITRE ATT&CK {matrix_name_human} available to use, and which version is the latest (the default version for the objects returned).\n", "summary": "Get a list of MITRE ATT&CK Enterprise versions stored in the database", "tags": ["ATT&CK Enterprise"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MitreVersions"}}}, "description": ""}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/attack-ics/objects/": {"get": {"operationId": "v1_attack_ics_objects_list", "description": "\nSearch and filter MITRE ATT&CK {matrix_name_human} objects.\n\nMITRE ATT&CK objects map to STIX objects as follows\n\n* Collection: `x-mitre-collection`\n* Matrix: `x-mitre-matrix`\n* Tactic: `x-mitre-tactic`\n* Techniques: `attack-pattern`\n* Sub-techniques: `attack-pattern` where `x_mitre_is_subtechnique = true` (Enterprise, Mobile only)\n* Mitigation: `course-of-action`\n* Groups: `intrusion-set`\n* Software (malicious): `malware`\n* Software (benign): `tool` (Enterprise, Mobile only)\n* Campaign: `campaign`\n* Data Source: `x-mitre-data-source`\n* Data Component: `x-mitre-data-component`\n* Asset: `x-mitre-asset` (ICS only)\n* Identity: `identity` (for MITRE and DOGESEC)\n* Marking definitions: `marking-definitions` for TLPs (v1) and copyright statements\n", "summary": "Search and filter MITRE ATT&CK ICS objects", "parameters": [{"in": "query", "name": "alias", "schema": {"type": "string"}, "description": "Filter the results by the `x_mitre_aliases` property of the object. Search is a wildcard, so `sun` will return all objects with x_mitre_aliases that contains the string `sun`, e.g `SUNBURST`."}, {"in": "query", "name": "attack_id", "schema": {"type": "array", "items": {"type": "string"}}, "description": "The ATT&CK IDs of the object wanted. e.g. `T1659`, `TA0043`, `S0066`.", "explode": false, "style": "form"}, {"in": "query", "name": "attack_version", "schema": {"type": "string"}, "description": "By default only the latest ATT&CK version objects will be returned. You can enter a specific ATT&CK version here. e.g. `13.1`. You can get a full list of versions on the GET ATT&CK versions endpoint."}, {"in": "query", "name": "description", "schema": {"type": "string"}, "description": "Filter the results by the `description` property of the object. Search is a wildcard, so `exploit` will return all descriptions that contain the string `exploit`."}, {"in": "query", "name": "id", "schema": {"type": "array", "items": {"type": "string"}}, "description": "Filter the results using the STIX ID of an object. e.g. `attack-pattern--0042a9f5-f053-4769-b3ef-9ad018dfa298`, `malware--04227b24-7817-4de1-9050-b7b1b57f5866`.", "explode": false, "style": "form"}, {"in": "query", "name": "include_deprecated", "schema": {"type": "boolean"}, "description": "By default all objects with `x_mitre_deprecated` are ignored. Set this to `true` to include them."}, {"in": "query", "name": "include_revoked", "schema": {"type": "boolean"}, "description": "By default all objects with `revoked` are ignored. Set this to `true` to include them."}, {"in": "query", "name": "name", "schema": {"type": "string"}, "description": "Filter the results by the `name` property of the object. Search is a wildcard, so `exploit` will return all names that contain the string `exploit`."}, {"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "schema": {"type": "integer"}}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "schema": {"type": "integer"}}, {"in": "query", "name": "type", "schema": {"type": "string", "enum": ["attack-pattern", "campaign", "course-of-action", "identity", "intrusion-set", "malware", "marking-definition", "tool", "x-mitre-data-component", "x-mitre-data-source", "x-mitre-matrix", "x-mitre-tactic"]}, "description": "Filter the results by STIX Object type.\n\n"}], "tags": ["ATT&CK ICS"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedStixObjectsList"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/attack-ics/objects/{attack_id}/": {"get": {"operationId": "v1_attack_ics_objects_list_2", "description": "\nGet a MITRE ATT&CK {matrix_name_human} object by its MITRE ATT&CK ID (e.g. `T1659`, `TA0043`, `S0066`).\n\nIf you do not know the ID of the object you can use the GET MITRE ATT&CK {matrix_name_human} Objects endpoint to find it.\n", "summary": "Get a specific MITRE ATT&CK ICS object by its ID", "parameters": [{"in": "path", "name": "attack_id", "schema": {"type": "string"}, "description": "The ATT&CK ID, e.g `T1659`, `TA0043`, `S0066`", "required": true}, {"in": "query", "name": "attack_version", "schema": {"type": "string"}, "description": "By default only the latest ATT&CK version objects will be returned. You can enter a specific ATT&CK version here. e.g. `13.1`. You can get a full list of versions on the GET ATT&CK versions endpoint."}, {"in": "query", "name": "include_deprecated", "schema": {"type": "boolean"}, "description": "By default all objects with `x_mitre_deprecated` are ignored. Set this to `true` to include them."}, {"in": "query", "name": "include_revoked", "schema": {"type": "boolean"}, "description": "By default all objects with `revoked` are ignored. Set this to `true` to include them."}, {"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "schema": {"type": "integer"}}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "schema": {"type": "integer"}}], "tags": ["ATT&CK ICS"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedStixObjectsList"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/attack-ics/objects/{attack_id}/relationships/": {"get": {"operationId": "v1_attack_ics_objects_relationships_retrieve", "description": "\nThis endpoint will return all the STIX `relationship` objects where the ATT&CK object is found as a `source_ref` or a `target_ref`.\n\nIf you want to see an overview of how MITRE ATT&CK objects are linked, [see this diagram](https://miro.com/app/board/uXjVKBgHZ2I=/).\n\nMITRE ATT&CK Enterprise objects can also be `target_ref` from CAPECs objects. Requires POST arango-cti-processor request using `capec-attack` mode for this data to show.\n", "summary": "Get the Relationships linked to the MITRE ATT&CK ICS Object", "parameters": [{"in": "query", "name": "_arango_cti_processor_note", "schema": {"type": "string"}, "description": "Filter results by `_arango_cti_processor_note`"}, {"in": "path", "name": "attack_id", "schema": {"type": "string"}, "description": "The ATT&CK ID, e.g `T1659`, `TA0043`, `S0066`", "required": true}, {"in": "query", "name": "attack_version", "schema": {"type": "string"}, "description": "By default only the latest ATT&CK version objects will be returned. You can enter a specific ATT&CK version here. e.g. `13.1`. You can get a full list of versions on the GET ATT&CK versions endpoint."}, {"in": "query", "name": "include_deprecated", "schema": {"type": "boolean"}, "description": "By default all objects with `x_mitre_deprecated` are ignored. Set this to `true` to include them."}, {"in": "query", "name": "include_embedded_refs", "schema": {"type": "boolean"}, "description": "\nIf `ignore_embedded_relationships` is set to `false` in the POST request to download data, stix2arango will create SROS for embedded relationships (e.g. from `created_by_refs`). You can choose to show them (`true`) or hide them (`false`) using this parameter. Default value if not passed is `true`.\n"}, {"in": "query", "name": "include_revoked", "schema": {"type": "boolean"}, "description": "By default all objects with `revoked` are ignored. Set this to `true` to include them."}, {"in": "query", "name": "page", "schema": {"type": "integer"}, "description": "A page number within the paginated result set."}, {"in": "query", "name": "page_size", "schema": {"type": "integer"}, "description": "Number of results to return per page."}, {"in": "query", "name": "relationship_direction", "schema": {"type": "string", "enum": ["source_ref", "target_ref"]}, "description": "\nFilters the results to only include SROs which have this object in the specified SRO property (e.g. setting `source_ref` will only return SROs where the object is shown in the `source_ref` property). Default is both.\n"}, {"in": "query", "name": "relationship_type", "schema": {"type": "string"}, "description": "filter by the `relationship_type` of the STIX SROs returned."}], "tags": ["ATT&CK ICS"], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "required": ["page_results_count", "relationships"], "properties": {"page_size": {"type": "integer", "example": 50}, "page_number": {"type": "integer", "example": 3}, "page_results_count": {"type": "integer", "example": 50}, "total_results_count": {"type": "integer", "example": 2500}, "relationships": {"type": "array", "items": {"type": "object", "properties": {"type": {"example": "relationship"}, "id": {"example": "relationship--a86627d4-285b-5358-b332-4e33f3ec1075"}}, "additionalProperties": true}}}}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/attack-ics/objects/{attack_id}/versions/": {"get": {"operationId": "v1_attack_ics_objects_versions_list", "description": "\nThis endpoint will show the STIX versions of the object (`modified` property) and what MITRE ATT&CK versions it appears in.\n\nThe data returned is useful to see when and object has changed.\n", "summary": "See all version of the MITRE ATT&CK ICS object", "parameters": [{"in": "path", "name": "attack_id", "schema": {"type": "string"}, "description": "The ATT&CK ID, e.g `T1659`, `TA0043`, `S0066`", "required": true}, {"in": "query", "name": "include_deprecated", "schema": {"type": "boolean"}, "description": "By default all objects with `x_mitre_deprecated` are ignored. Set this to `true` to include them."}, {"in": "query", "name": "include_revoked", "schema": {"type": "boolean"}, "description": "By default all objects with `revoked` are ignored. Set this to `true` to include them."}], "tags": ["ATT&CK ICS"], "responses": {"200": {"content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/MitreObjectVersions"}}}}, "description": ""}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/attack-ics/versions/": {"get": {"operationId": "v1_attack_ics_versions_retrieve", "description": "\nIt is possible to import multiple versions of ATT&CK using the POST MITRE ATT&CK {matrix_name_human} endpoint. By default, all endpoints will only return the latest version of ATT&CK objects (which generally suits most use-cases).\n\nThis endpoint allows you to see all imported versions of MITRE ATT&CK {matrix_name_human} available to use, and which version is the latest (the default version for the objects returned).\n", "summary": "Get a list of MITRE ATT&CK ICS versions stored in the database", "tags": ["ATT&CK ICS"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MitreVersions"}}}, "description": ""}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/attack-mobile/objects/": {"get": {"operationId": "v1_attack_mobile_objects_list", "description": "\nSearch and filter MITRE ATT&CK {matrix_name_human} objects.\n\nMITRE ATT&CK objects map to STIX objects as follows\n\n* Collection: `x-mitre-collection`\n* Matrix: `x-mitre-matrix`\n* Tactic: `x-mitre-tactic`\n* Techniques: `attack-pattern`\n* Sub-techniques: `attack-pattern` where `x_mitre_is_subtechnique = true` (Enterprise, Mobile only)\n* Mitigation: `course-of-action`\n* Groups: `intrusion-set`\n* Software (malicious): `malware`\n* Software (benign): `tool` (Enterprise, Mobile only)\n* Campaign: `campaign`\n* Data Source: `x-mitre-data-source`\n* Data Component: `x-mitre-data-component`\n* Asset: `x-mitre-asset` (ICS only)\n* Identity: `identity` (for MITRE and DOGESEC)\n* Marking definitions: `marking-definitions` for TLPs (v1) and copyright statements\n", "summary": "Search and filter MITRE ATT&CK Mobile objects", "parameters": [{"in": "query", "name": "alias", "schema": {"type": "string"}, "description": "Filter the results by the `x_mitre_aliases` property of the object. Search is a wildcard, so `sun` will return all objects with x_mitre_aliases that contains the string `sun`, e.g `SUNBURST`."}, {"in": "query", "name": "attack_id", "schema": {"type": "array", "items": {"type": "string"}}, "description": "The ATT&CK IDs of the object wanted. e.g. `T1659`, `TA0043`, `S0066`.", "explode": false, "style": "form"}, {"in": "query", "name": "attack_version", "schema": {"type": "string"}, "description": "By default only the latest ATT&CK version objects will be returned. You can enter a specific ATT&CK version here. e.g. `13.1`. You can get a full list of versions on the GET ATT&CK versions endpoint."}, {"in": "query", "name": "description", "schema": {"type": "string"}, "description": "Filter the results by the `description` property of the object. Search is a wildcard, so `exploit` will return all descriptions that contain the string `exploit`."}, {"in": "query", "name": "id", "schema": {"type": "array", "items": {"type": "string"}}, "description": "Filter the results using the STIX ID of an object. e.g. `attack-pattern--0042a9f5-f053-4769-b3ef-9ad018dfa298`, `malware--04227b24-7817-4de1-9050-b7b1b57f5866`.", "explode": false, "style": "form"}, {"in": "query", "name": "include_deprecated", "schema": {"type": "boolean"}, "description": "By default all objects with `x_mitre_deprecated` are ignored. Set this to `true` to include them."}, {"in": "query", "name": "include_revoked", "schema": {"type": "boolean"}, "description": "By default all objects with `revoked` are ignored. Set this to `true` to include them."}, {"in": "query", "name": "name", "schema": {"type": "string"}, "description": "Filter the results by the `name` property of the object. Search is a wildcard, so `exploit` will return all names that contain the string `exploit`."}, {"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "schema": {"type": "integer"}}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "schema": {"type": "integer"}}, {"in": "query", "name": "type", "schema": {"type": "string", "enum": ["attack-pattern", "campaign", "course-of-action", "identity", "intrusion-set", "malware", "marking-definition", "tool", "x-mitre-data-component", "x-mitre-data-source", "x-mitre-matrix", "x-mitre-tactic"]}, "description": "Filter the results by STIX Object type.\n\n"}], "tags": ["ATT&CK Mobile"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedStixObjectsList"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/attack-mobile/objects/{attack_id}/": {"get": {"operationId": "v1_attack_mobile_objects_list_2", "description": "\nGet a MITRE ATT&CK {matrix_name_human} object by its MITRE ATT&CK ID (e.g. `T1659`, `TA0043`, `S0066`).\n\nIf you do not know the ID of the object you can use the GET MITRE ATT&CK {matrix_name_human} Objects endpoint to find it.\n", "summary": "Get a specific MITRE ATT&CK Mobile object by its ID", "parameters": [{"in": "path", "name": "attack_id", "schema": {"type": "string"}, "description": "The ATT&CK ID, e.g `T1659`, `TA0043`, `S0066`", "required": true}, {"in": "query", "name": "attack_version", "schema": {"type": "string"}, "description": "By default only the latest ATT&CK version objects will be returned. You can enter a specific ATT&CK version here. e.g. `13.1`. You can get a full list of versions on the GET ATT&CK versions endpoint."}, {"in": "query", "name": "include_deprecated", "schema": {"type": "boolean"}, "description": "By default all objects with `x_mitre_deprecated` are ignored. Set this to `true` to include them."}, {"in": "query", "name": "include_revoked", "schema": {"type": "boolean"}, "description": "By default all objects with `revoked` are ignored. Set this to `true` to include them."}, {"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "schema": {"type": "integer"}}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "schema": {"type": "integer"}}], "tags": ["ATT&CK Mobile"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedStixObjectsList"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/attack-mobile/objects/{attack_id}/relationships/": {"get": {"operationId": "v1_attack_mobile_objects_relationships_retrieve", "description": "\nThis endpoint will return all the STIX `relationship` objects where the ATT&CK object is found as a `source_ref` or a `target_ref`.\n\nIf you want to see an overview of how MITRE ATT&CK objects are linked, [see this diagram](https://miro.com/app/board/uXjVKBgHZ2I=/).\n\nMITRE ATT&CK Enterprise objects can also be `target_ref` from CAPECs objects. Requires POST arango-cti-processor request using `capec-attack` mode for this data to show.\n", "summary": "Get the Relationships linked to the MITRE ATT&CK Mobile Object", "parameters": [{"in": "query", "name": "_arango_cti_processor_note", "schema": {"type": "string"}, "description": "Filter results by `_arango_cti_processor_note`"}, {"in": "path", "name": "attack_id", "schema": {"type": "string"}, "description": "The ATT&CK ID, e.g `T1659`, `TA0043`, `S0066`", "required": true}, {"in": "query", "name": "attack_version", "schema": {"type": "string"}, "description": "By default only the latest ATT&CK version objects will be returned. You can enter a specific ATT&CK version here. e.g. `13.1`. You can get a full list of versions on the GET ATT&CK versions endpoint."}, {"in": "query", "name": "include_deprecated", "schema": {"type": "boolean"}, "description": "By default all objects with `x_mitre_deprecated` are ignored. Set this to `true` to include them."}, {"in": "query", "name": "include_embedded_refs", "schema": {"type": "boolean"}, "description": "\nIf `ignore_embedded_relationships` is set to `false` in the POST request to download data, stix2arango will create SROS for embedded relationships (e.g. from `created_by_refs`). You can choose to show them (`true`) or hide them (`false`) using this parameter. Default value if not passed is `true`.\n"}, {"in": "query", "name": "include_revoked", "schema": {"type": "boolean"}, "description": "By default all objects with `revoked` are ignored. Set this to `true` to include them."}, {"in": "query", "name": "page", "schema": {"type": "integer"}, "description": "A page number within the paginated result set."}, {"in": "query", "name": "page_size", "schema": {"type": "integer"}, "description": "Number of results to return per page."}, {"in": "query", "name": "relationship_direction", "schema": {"type": "string", "enum": ["source_ref", "target_ref"]}, "description": "\nFilters the results to only include SROs which have this object in the specified SRO property (e.g. setting `source_ref` will only return SROs where the object is shown in the `source_ref` property). Default is both.\n"}, {"in": "query", "name": "relationship_type", "schema": {"type": "string"}, "description": "filter by the `relationship_type` of the STIX SROs returned."}], "tags": ["ATT&CK Mobile"], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "required": ["page_results_count", "relationships"], "properties": {"page_size": {"type": "integer", "example": 50}, "page_number": {"type": "integer", "example": 3}, "page_results_count": {"type": "integer", "example": 50}, "total_results_count": {"type": "integer", "example": 2500}, "relationships": {"type": "array", "items": {"type": "object", "properties": {"type": {"example": "relationship"}, "id": {"example": "relationship--a86627d4-285b-5358-b332-4e33f3ec1075"}}, "additionalProperties": true}}}}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/attack-mobile/objects/{attack_id}/versions/": {"get": {"operationId": "v1_attack_mobile_objects_versions_list", "description": "\nThis endpoint will show the STIX versions of the object (`modified` property) and what MITRE ATT&CK versions it appears in.\n\nThe data returned is useful to see when and object has changed.\n", "summary": "See all version of the MITRE ATT&CK Mobile object", "parameters": [{"in": "path", "name": "attack_id", "schema": {"type": "string"}, "description": "The ATT&CK ID, e.g `T1659`, `TA0043`, `S0066`", "required": true}, {"in": "query", "name": "include_deprecated", "schema": {"type": "boolean"}, "description": "By default all objects with `x_mitre_deprecated` are ignored. Set this to `true` to include them."}, {"in": "query", "name": "include_revoked", "schema": {"type": "boolean"}, "description": "By default all objects with `revoked` are ignored. Set this to `true` to include them."}], "tags": ["ATT&CK Mobile"], "responses": {"200": {"content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/MitreObjectVersions"}}}}, "description": ""}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/attack-mobile/versions/": {"get": {"operationId": "v1_attack_mobile_versions_retrieve", "description": "\nIt is possible to import multiple versions of ATT&CK using the POST MITRE ATT&CK {matrix_name_human} endpoint. By default, all endpoints will only return the latest version of ATT&CK objects (which generally suits most use-cases).\n\nThis endpoint allows you to see all imported versions of MITRE ATT&CK {matrix_name_human} available to use, and which version is the latest (the default version for the objects returned).\n", "summary": "Get a list of MITRE ATT&CK Mobile versions stored in the database", "tags": ["ATT&CK Mobile"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MitreVersions"}}}, "description": ""}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/capec/objects/": {"get": {"operationId": "v1_capec_objects_list", "description": "\nSearch and filter MITRE CAPEC objects.\n\nThe following STIX object types can be returned in this response:\n\n* `attack-pattern`: represent CAPECs\n* `course-of-action`: represents ways to respond to CAPECs\n* `identity`: for MITRE and DOGESEC\n* `marking-definitions`: for TLPs (v1) and copyright statements            \n", "summary": "Search and filter MITRE CAPEC objects", "parameters": [{"in": "query", "name": "capec_id", "schema": {"type": "array", "items": {"type": "string"}}, "description": "Filter the results by the CAPEC ID of the object. e.g. `CAPEC-112`, `CAPEC-699`.", "explode": false, "style": "form"}, {"in": "query", "name": "capec_version", "schema": {"type": "string"}, "description": "By default only the latest CAPEC version objects will be returned. You can enter a specific CAPEC version here. e.g. `3.7`. You can get a full list of versions on the GET CAPEC versions endpoint."}, {"in": "query", "name": "description", "schema": {"type": "string"}, "description": "Filter the results by the `description` property of the object. Search is a wildcard, so `exploit` will return all descriptions that contain the string `exploit`."}, {"in": "query", "name": "id", "schema": {"type": "array", "items": {"type": "string"}}, "description": "Filter the results using the STIX ID of an object. e.g. `attack-pattern--00268a75-3243-477d-9166-8c78fddf6df6`, `course-of-action--0002fa37-9334-41e2-971a-cc8cab6c00c4`.", "explode": false, "style": "form"}, {"in": "query", "name": "name", "schema": {"type": "string"}, "description": "Filter the results by the `name` property of the object. Search is a wildcard, so `exploit` will return all names that contain the string `exploit`."}, {"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "schema": {"type": "integer"}}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "schema": {"type": "integer"}}, {"in": "query", "name": "type", "schema": {"type": "string", "enum": ["attack-pattern", "course-of-action", "identity", "marking-definition"]}, "description": "Filter the results by STIX Object type.\n\n"}], "tags": ["CAPEC"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedStixObjectsList"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/capec/objects/{capec_id}/": {"get": {"operationId": "v1_capec_objects_list_2", "description": "\nGet a CAPEC object by its ID (e.g. `CAPEC-112`, `CAPEC-699`).\n\nIf you do not know the ID of the object you can use the GET MITRE CAPEC Objects endpoint to find it.\n", "summary": "Get a CAPEC object", "parameters": [{"in": "path", "name": "capec_id", "schema": {"type": "string"}, "description": "The CAPEC ID, e.g `CAPEC-112`, `CAPEC-699`", "required": true}, {"in": "query", "name": "capec_version", "schema": {"type": "string"}, "description": "By default only the latest CAPEC version objects will be returned. You can enter a specific CAPEC version here. e.g. `3.7`. You can get a full list of versions on the GET CAPEC versions endpoint."}, {"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "schema": {"type": "integer"}}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "schema": {"type": "integer"}}], "tags": ["CAPEC"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedStixObjectsList"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/capec/objects/{capec_id}/relationships/": {"get": {"operationId": "v1_capec_objects_relationships_retrieve", "description": "\nThis endpoint will return all the STIX relationship objects where the CAPEC object is found as a `source_ref` or a `target_ref`.\n\nMITRE CAPEC objects can also be `source_ref` from ATT&CK Enterprise objects. Requires POST arango-cti-processor request using `capec-attack` mode for this data to show.\n\nMITRE CAPEC objects can also be `target_ref` to CWE objects. Requires POST arango-cti-processor request using `cwe-capec` mode for this data to show.\n", "summary": "Get the Relationships linked to MITRE CAPEC Object", "parameters": [{"in": "query", "name": "_arango_cti_processor_note", "schema": {"type": "string"}, "description": "Filter results by `_arango_cti_processor_note`"}, {"in": "path", "name": "capec_id", "schema": {"type": "string"}, "description": "The CAPEC ID, e.g `CAPEC-112`, `CAPEC-699`", "required": true}, {"in": "query", "name": "capec_version", "schema": {"type": "string"}, "description": "By default only the latest CAPEC version objects will be returned. You can enter a specific CAPEC version here. e.g. `3.7`. You can get a full list of versions on the GET CAPEC versions endpoint."}, {"in": "query", "name": "include_embedded_refs", "schema": {"type": "boolean"}, "description": "\nIf `ignore_embedded_relationships` is set to `false` in the POST request to download data, stix2arango will create SROS for embedded relationships (e.g. from `created_by_refs`). You can choose to show them (`true`) or hide them (`false`) using this parameter. Default value if not passed is `true`.\n"}, {"in": "query", "name": "page", "schema": {"type": "integer"}, "description": "A page number within the paginated result set."}, {"in": "query", "name": "page_size", "schema": {"type": "integer"}, "description": "Number of results to return per page."}, {"in": "query", "name": "relationship_direction", "schema": {"type": "string", "enum": ["source_ref", "target_ref"]}, "description": "\nFilters the results to only include SROs which have this object in the specified SRO property (e.g. setting `source_ref` will only return SROs where the object is shown in the `source_ref` property). Default is both.\n"}, {"in": "query", "name": "relationship_type", "schema": {"type": "string"}, "description": "filter by the `relationship_type` of the STIX SROs returned."}], "tags": ["CAPEC"], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "required": ["page_results_count", "relationships"], "properties": {"page_size": {"type": "integer", "example": 50}, "page_number": {"type": "integer", "example": 3}, "page_results_count": {"type": "integer", "example": 50}, "total_results_count": {"type": "integer", "example": 2500}, "relationships": {"type": "array", "items": {"type": "object", "properties": {"type": {"example": "relationship"}, "id": {"example": "relationship--a86627d4-285b-5358-b332-4e33f3ec1075"}}, "additionalProperties": true}}}}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/capec/objects/{capec_id}/versions/": {"get": {"operationId": "v1_capec_objects_versions_list", "description": "\nThis endpoint will show the STIX versions of the object (`modified` property) and what CAPEC versions it appears in.\n\nThe data returned is useful to see when and object has changed.\n", "summary": "See all versions of the MITRE CAPEC object", "parameters": [{"in": "path", "name": "capec_id", "schema": {"type": "string"}, "description": "The CAPEC ID, e.g `CAPEC-112`, `CAPEC-699`", "required": true}], "tags": ["CAPEC"], "responses": {"200": {"content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/MitreObjectVersions"}}}}, "description": ""}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/capec/versions/": {"get": {"operationId": "v1_capec_versions_retrieve", "description": "\nIt is possible to import multiple versions of CAPEC using the POST MITRE CAPEC endpoint. By default, all endpoints will only return the latest version of CAPEC objects (which generally suits most use-cases).\n\nThis endpoint allows you to see all imported versions of MITRE CAPEC available to use, and which version is the latest (the default version for the objects returned).\n", "summary": "Get a list of CAPEC versions stored in the database", "tags": ["CAPEC"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MitreVersions"}}}, "description": ""}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/cwe/objects/": {"get": {"operationId": "v1_cwe_objects_list", "description": "\nSearch and filter MITRE CWE objects.\n\nThe following STIX object types can be returned in this response:\n\n* `weakness`: represent the CWE object\n* `grouping`: groups the CWE object by external groupings, [as shown here](https://cwe.mitre.org/data/index.html).\n* `identity`: the cwe2stix identity\n* `marking-definitions`: for cwe2stix and TLPs (v2)\n", "summary": "Search and filter MITRE CWE objects", "parameters": [{"in": "query", "name": "cwe_id", "schema": {"type": "array", "items": {"type": "string"}}, "description": "Filter the results by the CWE ID of the object. e.g. `CWE-242` `CWE-250`.", "explode": false, "style": "form"}, {"in": "query", "name": "cwe_version", "schema": {"type": "string"}, "description": "By default only the latest CWE version objects will be returned. You can enter a specific CWE version here. e.g. `4.13`. You can get a full list of versions on the GET CWE versions endpoint."}, {"in": "query", "name": "description", "schema": {"type": "string"}, "description": "Filter the results by the `description` property of the object. Search is a wildcard, so `exploit` will return all descriptions that contain the string `exploit`."}, {"in": "query", "name": "id", "schema": {"type": "array", "items": {"type": "string"}}, "description": "Filter the results using the STIX ID of an object. e.g. `weakness--f3496f30-5625-5b6d-8297-ddc074fb26c2`, `grouping--000ee024-ad9c-5557-8d49-2573a8e788d2`.", "explode": false, "style": "form"}, {"in": "query", "name": "name", "schema": {"type": "string"}, "description": "Filter the results by the `name` property of the object. Search is a wildcard, so `exploit` will return all names that contain the string `exploit`."}, {"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "schema": {"type": "integer"}}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "schema": {"type": "integer"}}], "tags": ["CWE"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedStixObjectsList"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/cwe/objects/{cwe_id}/": {"get": {"operationId": "v1_cwe_objects_list_2", "description": "\nGet an CWE object by its ID (e.g. `CWE-242` `CWE-250`).\n\nIf you do not know the ID of the object you can use the GET MITRE CWE Objects endpoint to find it.\n", "summary": "Get a CWE object", "parameters": [{"in": "path", "name": "cwe_id", "schema": {"type": "string"}, "description": "The CWE ID, e.g `CWE-242`, `CWE-250`", "required": true}, {"in": "query", "name": "cwe_version", "schema": {"type": "string"}, "description": "By default only the latest CWE version objects will be returned. You can enter a specific CWE version here. e.g. `4.13`. You can get a full list of versions on the GET CWE versions endpoint."}, {"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "schema": {"type": "integer"}}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "schema": {"type": "integer"}}], "tags": ["CWE"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedStixObjectsList"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/cwe/objects/{cwe_id}/relationships/": {"get": {"operationId": "v1_cwe_objects_relationships_retrieve", "description": "\nThis endpoint will return all the STIX relationship objects where the CWE object is found as a `source_ref` or a `target_ref`.\n\nIf you want to see an overview of how MITRE CWE objects are linked, [see this diagram](https://miro.com/app/board/uXjVKpOg6bM=/).\n\nMITRE CWE objects can also be `source_ref` to CAPEC objects. Requires POST arango-cti-processor request using `cwe-capec` mode for this data to show.\n", "summary": "Get the Relationships linked to MITRE CWE Object", "parameters": [{"in": "query", "name": "_arango_cti_processor_note", "schema": {"type": "string"}, "description": "Filter results by `_arango_cti_processor_note`"}, {"in": "path", "name": "cwe_id", "schema": {"type": "string"}, "description": "The CWE ID, e.g `CWE-242`, `CWE-250`", "required": true}, {"in": "query", "name": "cwe_version", "schema": {"type": "string"}, "description": "By default only the latest CWE version objects will be returned. You can enter a specific CWE version here. e.g. `4.13`. You can get a full list of versions on the GET CWE versions endpoint."}, {"in": "query", "name": "include_embedded_refs", "schema": {"type": "boolean"}, "description": "\nIf `ignore_embedded_relationships` is set to `false` in the POST request to download data, stix2arango will create SROS for embedded relationships (e.g. from `created_by_refs`). You can choose to show them (`true`) or hide them (`false`) using this parameter. Default value if not passed is `true`.\n"}, {"in": "query", "name": "page", "schema": {"type": "integer"}, "description": "A page number within the paginated result set."}, {"in": "query", "name": "page_size", "schema": {"type": "integer"}, "description": "Number of results to return per page."}, {"in": "query", "name": "relationship_direction", "schema": {"type": "string", "enum": ["source_ref", "target_ref"]}, "description": "\nFilters the results to only include SROs which have this object in the specified SRO property (e.g. setting `source_ref` will only return SROs where the object is shown in the `source_ref` property). Default is both.\n"}, {"in": "query", "name": "relationship_type", "schema": {"type": "string"}, "description": "filter by the `relationship_type` of the STIX SROs returned."}], "tags": ["CWE"], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "required": ["page_results_count", "relationships"], "properties": {"page_size": {"type": "integer", "example": 50}, "page_number": {"type": "integer", "example": 3}, "page_results_count": {"type": "integer", "example": 50}, "total_results_count": {"type": "integer", "example": 2500}, "relationships": {"type": "array", "items": {"type": "object", "properties": {"type": {"example": "relationship"}, "id": {"example": "relationship--a86627d4-285b-5358-b332-4e33f3ec1075"}}, "additionalProperties": true}}}}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/cwe/objects/{cwe_id}/versions/": {"get": {"operationId": "v1_cwe_objects_versions_list", "description": "\nThis endpoint will show the STIX versions of the object (`modified` property) and what CWE versions it appears in.\n\nThe data returned is useful to see when and object has changed.\n", "summary": "See all versions of the CWE object", "parameters": [{"in": "path", "name": "cwe_id", "schema": {"type": "string"}, "description": "The CWE ID, e.g `CWE-242`, `CWE-250`", "required": true}], "tags": ["CWE"], "responses": {"200": {"content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/MitreObjectVersions"}}}}, "description": ""}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/cwe/versions/": {"get": {"operationId": "v1_cwe_versions_retrieve", "description": "\nIt is possible to import multiple versions of CWE using the POST MITRE CWE endpoint. By default, all endpoints will only return the latest version of CWE objects (which generally suits most use-cases).\n\nThis endpoint allows you to see all imported versions of MITRE CWE available to use, and which version is the latest (the default version for the objects returned).\n", "summary": "See available CWE versions", "tags": ["CWE"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MitreVersions"}}}, "description": ""}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/disarm/objects/": {"get": {"operationId": "v1_disarm_objects_list", "description": "\nSearch and filter MITRE DISARM objects.\n\nThe following STIX object types can be returned in this response:\n\n* `weakness`: represent the DISARM object\n* `grouping`: groups the DISARM object by external groupings, [as shown here](https://disarm.mitre.org/data/index.html).\n* `identity`: the disarm2stix identity\n* `marking-definitions`: for disarm2stix and TLPs (v2)\n", "summary": "Search and filter MITRE DISARM objects", "parameters": [{"in": "query", "name": "description", "schema": {"type": "string"}, "description": "Filter the results by the `description` property of the object. Search is a wildcard, so `exploit` will return all descriptions that contain the string `exploit`."}, {"in": "query", "name": "disarm_id", "schema": {"type": "array", "items": {"type": "string"}}, "description": "Filter the results by the DISARM ID of the object. e.g. `TA05` `TA01`.", "explode": false, "style": "form"}, {"in": "query", "name": "disarm_version", "schema": {"type": "string"}, "description": "By default only the latest DISARM version objects will be returned. You can enter a specific DISARM version here. e.g. `1.5`. You can get a full list of versions on the GET DISARM versions endpoint."}, {"in": "query", "name": "id", "schema": {"type": "array", "items": {"type": "string"}}, "description": "Filter the results using the STIX ID of an object. e.g. `x-mitre-tactic--2c0826a4-1598-5909-810a-792dda66651d`, `attack-pattern--60877675-df30-5140-98b0-1b61a80c8171`.", "explode": false, "style": "form"}, {"in": "query", "name": "name", "schema": {"type": "string"}, "description": "Filter the results by the `name` property of the object. Search is a wildcard, so `exploit` will return all names that contain the string `exploit`."}, {"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "schema": {"type": "integer"}}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "schema": {"type": "integer"}}, {"in": "query", "name": "type", "schema": {"type": "string", "enum": ["attack-pattern", "identity", "marking-definition", "x-mitre-matrix", "x-mitre-tactic"]}, "description": "Filter the results by STIX Object type.\n\n"}], "tags": ["DISARM"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedStixObjectsList"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/disarm/objects/{disarm_id}/": {"get": {"operationId": "v1_disarm_objects_list_2", "description": "\nGet an DISARM object by its ID (e.g. `TA05` `TA01`).\n\nIf you do not know the ID of the object you can use the GET MITRE DISARM Objects endpoint to find it.\n", "summary": "Get a DISARM object", "parameters": [{"in": "path", "name": "disarm_id", "schema": {"type": "string"}, "description": "The DISARM ID, e.g `TA05`, `TA01`", "required": true}, {"in": "query", "name": "disarm_version", "schema": {"type": "string"}, "description": "By default only the latest DISARM version objects will be returned. You can enter a specific DISARM version here. e.g. `1.5`. You can get a full list of versions on the GET DISARM versions endpoint."}, {"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "schema": {"type": "integer"}}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "schema": {"type": "integer"}}], "tags": ["DISARM"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedStixObjectsList"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/disarm/objects/{disarm_id}/relationships/": {"get": {"operationId": "v1_disarm_objects_relationships_retrieve", "description": "\nThis endpoint will return all the STIX relationship objects where the DISARM object is found as a `source_ref` or a `target_ref`.\n\nIf you want to see an overview of how MITRE DISARM objects are linked, [see this diagram](https://miro.com/app/board/uXjVKpOg6bM=/).\n\nMITRE DISARM objects can also be `source_ref` to CAPEC objects. Requires POST arango-cti-processor request using `disarm-capec` mode for this data to show.\n", "summary": "Get the Relationships linked to MITRE DISARM Object", "parameters": [{"in": "query", "name": "_arango_cti_processor_note", "schema": {"type": "string"}, "description": "Filter results by `_arango_cti_processor_note`"}, {"in": "path", "name": "disarm_id", "schema": {"type": "string"}, "description": "The DISARM ID, e.g `TA05`, `TA01`", "required": true}, {"in": "query", "name": "disarm_version", "schema": {"type": "string"}, "description": "By default only the latest DISARM version objects will be returned. You can enter a specific DISARM version here. e.g. `1.5`. You can get a full list of versions on the GET DISARM versions endpoint."}, {"in": "query", "name": "include_embedded_refs", "schema": {"type": "boolean"}, "description": "\nIf `ignore_embedded_relationships` is set to `false` in the POST request to download data, stix2arango will create SROS for embedded relationships (e.g. from `created_by_refs`). You can choose to show them (`true`) or hide them (`false`) using this parameter. Default value if not passed is `true`.\n"}, {"in": "query", "name": "page", "schema": {"type": "integer"}, "description": "A page number within the paginated result set."}, {"in": "query", "name": "page_size", "schema": {"type": "integer"}, "description": "Number of results to return per page."}, {"in": "query", "name": "relationship_direction", "schema": {"type": "string", "enum": ["source_ref", "target_ref"]}, "description": "\nFilters the results to only include SROs which have this object in the specified SRO property (e.g. setting `source_ref` will only return SROs where the object is shown in the `source_ref` property). Default is both.\n"}, {"in": "query", "name": "relationship_type", "schema": {"type": "string"}, "description": "filter by the `relationship_type` of the STIX SROs returned."}], "tags": ["DISARM"], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "required": ["page_results_count", "relationships"], "properties": {"page_size": {"type": "integer", "example": 50}, "page_number": {"type": "integer", "example": 3}, "page_results_count": {"type": "integer", "example": 50}, "total_results_count": {"type": "integer", "example": 2500}, "relationships": {"type": "array", "items": {"type": "object", "properties": {"type": {"example": "relationship"}, "id": {"example": "relationship--a86627d4-285b-5358-b332-4e33f3ec1075"}}, "additionalProperties": true}}}}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/disarm/objects/{disarm_id}/versions/": {"get": {"operationId": "v1_disarm_objects_versions_list", "description": "\nThis endpoint will show the STIX versions of the object (`modified` property) and what DISARM versions it appears in.\n\nThe data returned is useful to see when and object has changed.\n", "summary": "See all versions of the DISARM object", "parameters": [{"in": "path", "name": "disarm_id", "schema": {"type": "string"}, "description": "The DISARM ID, e.g `TA05`, `TA01`", "required": true}], "tags": ["DISARM"], "responses": {"200": {"content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/MitreObjectVersions"}}}}, "description": ""}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/disarm/versions/": {"get": {"operationId": "v1_disarm_versions_retrieve", "description": "\nIt is possible to import multiple versions of DISARM using the POST MITRE DISARM endpoint. By default, all endpoints will only return the latest version of DISARM objects (which generally suits most use-cases).\n\nThis endpoint allows you to see all imported versions of MITRE DISARM available to use, and which version is the latest (the default version for the objects returned).\n", "summary": "See available DISARM versions", "tags": ["DISARM"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MitreVersions"}}}, "description": ""}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/jobs/": {"get": {"operationId": "v1_jobs_list", "description": "\nSearch and filter Jobs. Jobs are triggered for each time a data download request is executed (e.g. POST ATT&CK) or requests to join data (e.g. POST Arango CTI Processor). \n", "summary": "Get Jobs", "parameters": [{"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "schema": {"type": "integer"}}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "schema": {"type": "integer"}}, {"name": "sort", "required": false, "in": "query", "description": "Which field to use when ordering the results.", "schema": {"type": "string", "enum": ["run_datetime_descending", "run_datetime_ascending", "state_descending", "state_ascending", "type_descending", "type_ascending", "id_descending", "id_ascending"]}}, {"in": "query", "name": "state", "schema": {"type": "string", "enum": ["completed", "failed", "pending", "processing"]}, "description": "Filter the results by the state of the Job"}, {"in": "query", "name": "type", "schema": {"type": "string", "enum": ["arango-cti-processor", "arango-cti-processor--capec-attack", "arango-cti-processor--cwe-capec", "atlas-update", "attack-update", "attack-update--enterprise", "attack-update--ics", "attack-update--mobile", "capec-update", "cwe-update", "disarm-update", "location-update", "tlp-update"]}, "description": "Filter the results by the type of Job\n\n"}], "tags": ["Jobs"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedJobList"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/jobs/{job_id}/": {"get": {"operationId": "v1_jobs_retrieve", "description": "\nGet information about a specific Job. To retrieve a Job ID, use the GET Jobs endpoint.\n", "summary": "Get a Job by ID", "parameters": [{"in": "path", "name": "job_id", "schema": {"type": "string", "format": "uuid"}, "description": "The Job `id`. You can find Jobs and their `id`s using the Get Jobs endpoint.", "required": true}], "tags": ["Jobs"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Job"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http404": {"value": {"message": "The server cannot find the resource you requested", "code": 404}, "summary": "http404"}}}}, "description": "Resource not found"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/location/objects/": {"get": {"operationId": "v1_location_objects_list", "description": "\nSearch and filter Location objects. Four types of Locations are supported;\n\n* Countries (e.g. `France`)\n* Intermediate regions (e.g. `Channel Islands`)\n* Sub-regions (e.g. `Western Europe`)\n* Regions (e.g. `Europe`)\n", "summary": "Get Location objects", "parameters": [{"in": "query", "name": "alpha2_code", "schema": {"type": "string"}, "description": "Filter by alpha-2 code of the country (e.g `MX`, `DE`). Only works with country type locations."}, {"in": "query", "name": "alpha3_code", "schema": {"type": "string"}, "description": "Filter by alpha-3 code of the country (e.g `MEX`, `USA`). Only works with country type locations."}, {"in": "query", "name": "id", "schema": {"type": "array", "items": {"type": "string"}}, "description": "Filter the results using the STIX ID of an object. e.g. `location--bc9ab5f5-cb71-5f3f-a4aa-5265053b8e68`, `location--10f646f3-2693-5a48-b544-b13b7afaa327`.", "explode": false, "style": "form"}, {"in": "query", "name": "location_type", "schema": {"type": "array", "items": {"type": "string", "enum": ["country", "intermediate-region", "region", "sub-region"]}}, "description": "Filter by location type\n\n", "explode": false, "style": "form"}, {"in": "query", "name": "name", "schema": {"type": "string"}, "description": "Filter the results by the `name` property of the object. Search is a wildcard, so `Ca` will return all names that contain the string `Tur`, e.g `Turkey`, `Turkmenistan`."}, {"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "schema": {"type": "integer"}}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "schema": {"type": "integer"}}], "tags": ["Location"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedStixObjectsList"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/location/objects/{stix_id}/": {"get": {"operationId": "v1_location_objects_list_2", "description": "\nGet a Location object by its STIX ID (e.g. `location--bc9ab5f5-cb71-5f3f-a4aa-5265053b8e68`, `location--10f646f3-2693-5a48-b544-b13b7afaa327`)\n\nIf you do not know the ID of the object you can use the GET MITRE ATLAS Objects endpoint to find it.\n", "summary": "Get a Location object", "parameters": [{"in": "query", "name": "location_version", "schema": {"type": "string"}, "description": "Filter the results by the version of Location"}, {"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "schema": {"type": "integer"}}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "schema": {"type": "integer"}}, {"in": "path", "name": "stix_id", "schema": {"type": "string"}, "description": "The STIX ID of the object (e.g. `location--bc9ab5f5-cb71-5f3f-a4aa-5265053b8e68`, `location--10f646f3-2693-5a48-b544-b13b7afaa327`)", "required": true}], "tags": ["Location"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedStixObjectsList"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/location/objects/{stix_id}/relationships/": {"get": {"operationId": "v1_location_objects_relationships_list", "description": "\nThis endpoint will return all the STIX relationship objects where the Location object is found as a `source_ref` or a `target_ref`.\n\nIf you want to see an overview of how Location objects are linked, [see this diagram](https://miro.com/app/board/uXjVKAj06DQ=/).\n", "summary": "Get the Relationships linked to the Location object", "parameters": [{"in": "query", "name": "_arango_cti_processor_note", "schema": {"type": "string"}, "description": "Filter results by `_arango_cti_processor_note`"}, {"in": "query", "name": "include_embedded_refs", "schema": {"type": "boolean"}, "description": "\nIf `ignore_embedded_relationships` is set to `false` in the POST request to download data, stix2arango will create SROS for embedded relationships (e.g. from `created_by_refs`). You can choose to show them (`true`) or hide them (`false`) using this parameter. Default value if not passed is `true`.\n"}, {"in": "query", "name": "location_version", "schema": {"type": "string"}, "description": "Filter the results by the version of Location"}, {"in": "query", "name": "page", "schema": {"type": "integer"}, "description": "A page number within the paginated result set."}, {"in": "query", "name": "page_size", "schema": {"type": "integer"}, "description": "Number of results to return per page."}, {"in": "query", "name": "relationship_direction", "schema": {"type": "string", "enum": ["source_ref", "target_ref"]}, "description": "\nFilters the results to only include SROs which have this object in the specified SRO property (e.g. setting `source_ref` will only return SROs where the object is shown in the `source_ref` property). Default is both.\n"}, {"in": "query", "name": "relationship_type", "schema": {"type": "string"}, "description": "filter by the `relationship_type` of the STIX SROs returned."}, {"in": "path", "name": "stix_id", "schema": {"type": "string"}, "description": "The STIX ID of the object (e.g. `location--bc9ab5f5-cb71-5f3f-a4aa-5265053b8e68`, `location--10f646f3-2693-5a48-b544-b13b7afaa327`)", "required": true}], "tags": ["Location"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedStixObjectsList"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/location/objects/{stix_id}/versions/": {"get": {"operationId": "v1_location_objects_versions_list", "description": "\nThis endpoint will show the STIX versions of the object (`modified` property) and what Location versions it appears in.\n\nThe data returned is useful to see when and object has changed.\n", "summary": "See all versions of the Location object", "parameters": [{"in": "path", "name": "stix_id", "schema": {"type": "string"}, "description": "The STIX ID of the object (e.g. `location--bc9ab5f5-cb71-5f3f-a4aa-5265053b8e68`, `location--10f646f3-2693-5a48-b544-b13b7afaa327`)", "required": true}], "tags": ["Location"], "responses": {"200": {"content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/StixObjects"}}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/location/versions/": {"get": {"operationId": "v1_location_versions_retrieve", "description": "\nIt is possible to import multiple versions of Location using the POST Location endpoint. By default, all endpoints will only return the latest version of Location objects (which generally suits most use-cases).\n\nThis endpoint allows you to see all imported versions of Location available to use, and which version is the latest (the default version for the objects returned).\n", "summary": "See available Location versions", "tags": ["Location"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MitreVersions"}}}, "description": ""}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/object/{object_id}/": {"get": {"operationId": "v1_object_retrieve", "description": "\nGet a STIX Object by its ID\n", "summary": "Get a STIX Object", "parameters": [{"in": "path", "name": "object_id", "schema": {"type": "string"}, "description": "Filter by the STIX object ID. e.g. `ipv4-addr--ba6b3f21-d818-4e7c-bfff-765805177512`, `indicator--7bff059e-6963-4b50-b901-4aba20ce1c01`", "required": true}, {"in": "query", "name": "page", "schema": {"type": "integer"}, "description": "A page number within the paginated result set."}, {"in": "query", "name": "page_size", "schema": {"type": "integer"}, "description": "Number of results to return per page."}], "tags": ["Objects"], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "required": ["page_results_count", "objects"], "properties": {"page_size": {"type": "integer", "example": 50}, "page_number": {"type": "integer", "example": 3}, "page_results_count": {"type": "integer", "example": 50}, "total_results_count": {"type": "integer", "example": 2500}, "objects": {"type": "array", "items": {"type": "object", "properties": {"type": {"example": "domain-name"}, "id": {"example": "domain-name--a86627d4-285b-5358-b332-4e33f3ec1075"}}, "additionalProperties": true}}}}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"type": "object", "properties": {"detail": {"type": "string"}, "code": {"type": "integer"}}, "required": ["code"]}}}, "description": ""}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/objects/scos/": {"get": {"operationId": "v1_objects_scos_retrieve", "description": "\nSearch for STIX Cyber Observable Objects (aka Indicators of Compromise). If you have the object ID already, you can use the base GET Objects endpoint.\n\nNote the `value` filter searches the following object properties;\n\n* `artifact.payload_bin`\n* `autonomous-system.number`\n* `bank-account.iban_number`\n* `bank-card.number`\n* `cryptocurrency-transaction.hash`\n* `cryptocurrency-wallet.hash`\n* `directory.path`\n* `domain-name.value`\n* `email-addr.value`\n* `email-message.body`\n* `file.name`\n* `ipv4-addr.value`\n* `ipv6-addr.value`\n* `mac-addr.value`\n* `mutex.value`\n* `network-traffic.protocols`\n* `phone-number.number`\n* `process.pid`\n* `software.name`\n* `url.value`\n* `user-account.display_name`\n* `user-agent.string`\n* `windows-registry-key.key`\n* `x509-certificate.subject`\n", "summary": "Search and filter STIX Cyber Observable Objects", "parameters": [{"in": "query", "name": "page", "schema": {"type": "integer"}, "description": "A page number within the paginated result set."}, {"in": "query", "name": "page_size", "schema": {"type": "integer"}, "description": "Number of results to return per page."}, {"in": "query", "name": "post_id", "schema": {"type": "string"}, "description": "\nFilter the results to only contain objects present in the specified Post ID. Get a Post ID using the Feeds endpoints.\n"}, {"in": "query", "name": "sort", "schema": {"type": "string", "enum": ["type_ascending", "type_descending"]}}, {"in": "query", "name": "types", "schema": {"type": "array", "items": {"type": "string", "enum": ["artifact", "autonomous-system", "bank-account", "bank-card", "cryptocurrency-transaction", "cryptocurrency-wallet", "directory", "domain-name", "email-addr", "email-message", "file", "ipv4-addr", "ipv6-addr", "mac-addr", "mutex", "network-traffic", "phone-number", "process", "software", "url", "user-account", "user-agent", "windows-registry-key", "x509-certificate"]}}, "description": "\nFilter the results by one or more STIX SCO Object types\n", "explode": false}, {"in": "query", "name": "value", "schema": {"type": "string"}, "description": "\nSearch by the `value` field field of the SCO. This is the IoC. So if you're looking to retrieve a IP address by address you would enter the IP address here. Similarly, if you're looking for a credit card you would enter the card number here.\nSearch is wildcard. For example, `1.1` will return SCOs with `value` fields; `1.1.1.1`, `2.1.1.2`, etc.\nIf `value` field is named differently for the Object (e.g. `hash`) it will still be searched because these have been aliased to the `value` in the database search).\n"}], "tags": ["Objects"], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "required": ["page_results_count", "objects"], "properties": {"page_size": {"type": "integer", "example": 50}, "page_number": {"type": "integer", "example": 3}, "page_results_count": {"type": "integer", "example": 50}, "total_results_count": {"type": "integer", "example": 2500}, "objects": {"type": "array", "items": {"type": "object", "properties": {"type": {"example": "domain-name"}, "id": {"example": "domain-name--a86627d4-285b-5358-b332-4e33f3ec1075"}}, "additionalProperties": true}}}}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"type": "object", "properties": {"detail": {"type": "string"}, "code": {"type": "integer"}}, "required": ["code"]}}}, "description": ""}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/objects/sdos/": {"get": {"operationId": "v1_objects_sdos_retrieve", "description": "\nSearch for domain objects (aka TTPs). If you have the object ID already, you can use the base GET Objects endpoint.\n", "summary": "Search and filter STIX Domain Objects", "parameters": [{"in": "query", "name": "labels", "schema": {"type": "string"}, "description": "\nAllows results to be filtered on each value in the `labels` field of the SDO. Each value in the `labels` list will be searched individually.\nSearch is wildcard. For example, `needs` will return SDOs with `labels`; `need-attribution`, `needs-review`, etc. The value entered only needs to match one item in the `labels` list to return results.\n"}, {"in": "query", "name": "name", "schema": {"type": "string"}, "description": "\nAllows results to be filtered on the `name` field of the SDO. Search is wildcard. For example, `Wanna` will return SDOs with the `name`; `WannaCry`, `WannaSmile`, etc.\n"}, {"in": "query", "name": "page", "schema": {"type": "integer"}, "description": "A page number within the paginated result set."}, {"in": "query", "name": "page_size", "schema": {"type": "integer"}, "description": "Number of results to return per page."}, {"in": "query", "name": "sort", "schema": {"type": "string", "enum": ["created_ascending", "created_descending", "modified_ascending", "modified_descending", "name_ascending", "name_descending", "type_ascending", "type_descending"]}}, {"in": "query", "name": "types", "schema": {"type": "array", "items": {"type": "string", "enum": ["attack-pattern", "campaign", "course-of-action", "grouping", "identity", "incident", "indicator", "infrastructure", "intrusion-set", "location", "malware", "malware-analysis", "note", "observed-data", "opinion", "report", "sighting", "threat-actor", "tool", "vulnerability"]}}, "description": "\nFilter the results by one or more STIX Domain Object types\n", "explode": false}], "tags": ["Objects"], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "required": ["page_results_count", "objects"], "properties": {"page_size": {"type": "integer", "example": 50}, "page_number": {"type": "integer", "example": 3}, "page_results_count": {"type": "integer", "example": 50}, "total_results_count": {"type": "integer", "example": 2500}, "objects": {"type": "array", "items": {"type": "object", "properties": {"type": {"example": "domain-name"}, "id": {"example": "domain-name--a86627d4-285b-5358-b332-4e33f3ec1075"}}, "additionalProperties": true}}}}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"type": "object", "properties": {"detail": {"type": "string"}, "code": {"type": "integer"}}, "required": ["code"]}}}, "description": ""}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/objects/smos/": {"get": {"operationId": "v1_objects_smos_retrieve", "description": "\nSearch for meta objects. If you have the object ID already, you can use the base GET Objects endpoint.\n", "summary": "Search and filter STIX Meta Objects", "parameters": [{"in": "query", "name": "page", "schema": {"type": "integer"}, "description": "A page number within the paginated result set."}, {"in": "query", "name": "page_size", "schema": {"type": "integer"}, "description": "Number of results to return per page."}, {"in": "query", "name": "sort", "schema": {"type": "string", "enum": ["created_ascending", "created_descending", "type_ascending", "type_descending"]}}, {"in": "query", "name": "types", "schema": {"type": "array", "items": {"type": "string", "enum": ["extension-definition", "language-content", "marking-definition"]}}, "description": "\nFilter the results by one or more STIX Object types\n", "explode": false}], "tags": ["Objects"], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "required": ["page_results_count", "objects"], "properties": {"page_size": {"type": "integer", "example": 50}, "page_number": {"type": "integer", "example": 3}, "page_results_count": {"type": "integer", "example": 50}, "total_results_count": {"type": "integer", "example": 2500}, "objects": {"type": "array", "items": {"type": "object", "properties": {"type": {"example": "domain-name"}, "id": {"example": "domain-name--a86627d4-285b-5358-b332-4e33f3ec1075"}}, "additionalProperties": true}}}}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"type": "object", "properties": {"detail": {"type": "string"}, "code": {"type": "integer"}}, "required": ["code"]}}}, "description": ""}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/objects/sros/": {"get": {"operationId": "v1_objects_sros_retrieve", "description": "\nSearch for relationship objects. This endpoint is particularly useful to search what Objects an SCO or SDO is linked to.\n", "summary": "Search and filter STIX Relationship Objects", "parameters": [{"in": "query", "name": "include_embedded_refs", "schema": {"type": "boolean"}, "description": "\nIf `ignore_embedded_relationships` is set to `false` in the POST request to download data, stix2arango will create SROS for embedded relationships (e.g. from `created_by_refs`). You can choose to show them (`true`) or hide them (`false`) using this parameter. Default value if not passed is `true`.\n"}, {"in": "query", "name": "page", "schema": {"type": "integer"}, "description": "A page number within the paginated result set."}, {"in": "query", "name": "page_size", "schema": {"type": "integer"}, "description": "Number of results to return per page."}, {"in": "query", "name": "relationship_type", "schema": {"type": "string"}, "description": "\nFilter the results on the `relationship_type` field. Search is wildcard. For example, `in` will return `relationship` objects with ``relationship_type`s; `found-in`, `located-in`, etc.\n"}, {"in": "query", "name": "sort", "schema": {"type": "string", "enum": ["created_ascending", "created_descending", "modified_ascending", "modified_descending"]}}, {"in": "query", "name": "source_ref", "schema": {"type": "string"}, "description": "\nFilter the results on the `source_ref` fields. The value entered should be a full ID of a STIX SDO or SCO which can be obtained from the respective Get Object endpoints. This endpoint allows for graph traversal use-cases as it returns STIX `relationship` objects that will tell you what objects are related to the one entered (in the `target_ref` property).\n"}, {"in": "query", "name": "source_ref_type", "schema": {"type": "array", "items": {"type": "string"}}, "description": "\nFilter the results by the STIX object type in the `source_ref` field. Unlike the `source_ref` filter that requires a full STIX object ID, this filter allows for a more open search. For example, `attack-pattern` will return all `relationship` Objects where the `source_ref` contains the ID of an `attack-pattern` Object.\n", "explode": false}, {"in": "query", "name": "target_ref", "schema": {"type": "string"}, "description": "\nFilter the results on the `target_ref` fields. The value entered should be a full ID of a STIX SDO or SCO which can be obtained from the respective Get Object endpoints. This endpoint allows for graph traversal use-cases as it returns STIX `relationship` objects that will tell you what objects are related to the one entered (in the `source_ref` property).\n"}, {"in": "query", "name": "target_ref_type", "schema": {"type": "array", "items": {"type": "string"}}, "description": "\nFilter the results by the STIX object type in the `target_ref` field. Unlike the `target_ref` filter that requires a full STIX object ID, this filter allows for a more open search. For example, `attack-pattern` will return all `relationship` Objects where the `target_ref` contains the ID of an `attack-pattern` Object.\n", "explode": false}], "tags": ["Objects"], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "required": ["page_results_count", "objects"], "properties": {"page_size": {"type": "integer", "example": 50}, "page_number": {"type": "integer", "example": 3}, "page_results_count": {"type": "integer", "example": 50}, "total_results_count": {"type": "integer", "example": 2500}, "objects": {"type": "array", "items": {"type": "object", "properties": {"type": {"example": "domain-name"}, "id": {"example": "domain-name--a86627d4-285b-5358-b332-4e33f3ec1075"}}, "additionalProperties": true}}}}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"type": "object", "properties": {"detail": {"type": "string"}, "code": {"type": "integer"}}, "required": ["code"]}}}, "description": ""}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/tlp/objects/": {"get": {"operationId": "v1_tlp_objects_list", "description": "\nSearch and filter TLP results. This endpoint will return `marking-definition` objects.\n", "summary": "Get TLP objects", "parameters": [{"in": "query", "name": "id", "schema": {"type": "array", "items": {"type": "string"}}, "description": "Filter the results using the STIX ID of an object. e.g. `marking-definition--94868c89-83c2-464b-929b-a1a8aa3c8487`, `marking-definition--bab4a63c-aed9-4cf5-a766-dfca5abac2bb`.", "explode": false, "style": "form"}, {"in": "query", "name": "name", "schema": {"type": "string"}, "description": "Filter the results by the `name` property of the object. e.g `clear`, `amber`."}, {"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "schema": {"type": "integer"}}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "schema": {"type": "integer"}}], "tags": ["TLP"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedStixObjectsList"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/tlp/objects/{stix_id}/": {"get": {"operationId": "v1_tlp_objects_list_2", "description": "\nGet an TLP object by its STIX ID. To search and filter TLP objects to get an ID use the GET Objects endpoint.\n", "summary": "Get a TLP object", "parameters": [{"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "schema": {"type": "integer"}}, {"name": "page_size", "required": false, "in": "query", "description": "Number of results to return per page.", "schema": {"type": "integer"}}, {"in": "path", "name": "stix_id", "schema": {"type": "string"}, "description": "The STIX ID (e.g. `marking-definition--94868c89-83c2-464b-929b-a1a8aa3c8487`, `marking-definition--bab4a63c-aed9-4cf5-a766-dfca5abac2bb`)", "required": true}, {"in": "query", "name": "tlp_version", "schema": {"type": "string"}, "description": "Filter the results by the version of TLP"}], "tags": ["TLP"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedStixObjectsList"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/tlp/objects/{stix_id}/relationships/": {"get": {"operationId": "v1_tlp_objects_relationships_list", "description": "\nThis endpoint will return all the STIX `relationship` objects where the TLP object is found as a `source_ref` or a `target_ref`. Note, at present this endpoint only considers embedded relationships and not relationships to other knowledgebases as thousands of relationships might exists (e.g. TLP GREEN is used extensively) thus does not make sense to return all these objects using this endpoint).\n", "summary": "Get all Relationships linked to the TLP object", "parameters": [{"in": "query", "name": "_arango_cti_processor_note", "schema": {"type": "string"}, "description": "Filter results by `_arango_cti_processor_note`"}, {"in": "query", "name": "include_embedded_refs", "schema": {"type": "boolean"}, "description": "\nIf `ignore_embedded_relationships` is set to `false` in the POST request to download data, stix2arango will create SROS for embedded relationships (e.g. from `created_by_refs`). You can choose to show them (`true`) or hide them (`false`) using this parameter. Default value if not passed is `true`.\n"}, {"in": "query", "name": "page", "schema": {"type": "integer"}, "description": "A page number within the paginated result set."}, {"in": "query", "name": "page_size", "schema": {"type": "integer"}, "description": "Number of results to return per page."}, {"in": "query", "name": "relationship_direction", "schema": {"type": "string", "enum": ["source_ref", "target_ref"]}, "description": "\nFilters the results to only include SROs which have this object in the specified SRO property (e.g. setting `source_ref` will only return SROs where the object is shown in the `source_ref` property). Default is both.\n"}, {"in": "query", "name": "relationship_type", "schema": {"type": "string"}, "description": "filter by the `relationship_type` of the STIX SROs returned."}, {"in": "path", "name": "stix_id", "schema": {"type": "string"}, "description": "The STIX ID (e.g. `marking-definition--94868c89-83c2-464b-929b-a1a8aa3c8487`, `marking-definition--bab4a63c-aed9-4cf5-a766-dfca5abac2bb`)", "required": true}, {"in": "query", "name": "tlp_version", "schema": {"type": "string"}, "description": "Filter the results by the version of TLP"}], "tags": ["TLP"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedStixObjectsList"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"Http400": {"value": {"message": " The server did not understand the request", "code": 400}, "summary": "http400"}}}}, "description": "The server did not understand the request"}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/tlp/objects/{stix_id}/versions/": {"get": {"operationId": "v1_tlp_objects_versions_list", "description": "\nSee all imported versions available to use.\n", "summary": "See available TLP versions for TLP STIX ID", "parameters": [{"in": "path", "name": "stix_id", "schema": {"type": "string"}, "description": "The STIX ID (e.g. `marking-definition--94868c89-83c2-464b-929b-a1a8aa3c8487`, `marking-definition--bab4a63c-aed9-4cf5-a766-dfca5abac2bb`)", "required": true}], "tags": ["TLP"], "responses": {"200": {"content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/MitreObjectVersions"}}}}, "description": ""}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}, "/ctibutler_api/api/v1/tlp/versions/": {"get": {"operationId": "v1_tlp_versions_retrieve", "description": "\nIt is possible to import multiple versions of TLP using the POST TLP endpoint. By default, all endpoints will only return the latest version of TLP objects (which generally suits most use-cases).\n\nThis endpoint allows you to see all imported versions of TLP available to use, and which version is the latest (the default version for the objects returned).\n", "summary": "See available TLP versions", "tags": ["TLP"], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MitreVersions"}}}, "description": ""}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommonError"}, "examples": {"404-page": {"value": {"code": 404, "message": "non-existent page"}}}}}, "description": "webserver's HTML 404 page"}}, "security": [{"api_key": []}]}}}, "components": {"schemas": {"ACPRequest": {"type": "object", "properties": {"ignore_embedded_relationships": {"type": "boolean", "default": false}, "modified_min": {"type": "string", "format": "date-time"}, "created_min": {"type": "string", "format": "date-time"}}}, "CommonError": {"type": "object", "properties": {"message": {"type": "string"}, "code": {"type": "integer"}, "details": {}}, "required": ["code"]}, "Job": {"type": "object", "properties": {"id": {"type": "string", "format": "uuid"}, "type": {"$ref": "#/components/schemas/TypeEnum"}, "state": {"$ref": "#/components/schemas/StateEnum"}, "errors": {"type": "array", "items": {"type": "string", "maxLength": 1024}, "nullable": true}, "run_datetime": {"type": "string", "format": "date-time", "readOnly": true}, "completion_time": {"type": "string", "format": "date-time", "nullable": true}, "parameters": {}}, "required": ["parameters", "run_datetime", "type"]}, "MitreObjectVersions": {"type": "object", "properties": {"modified": {"type": "string", "format": "date-time"}, "versions": {"type": "array", "items": {"type": "string"}}}, "required": ["modified", "versions"]}, "MitreTaskRequest": {"type": "object", "properties": {"version": {"type": "string", "minLength": 1, "description": "version passed to the script"}, "ignore_embedded_relationships": {"type": "boolean", "default": false}}, "required": ["version"]}, "MitreVersions": {"type": "object", "properties": {"latest": {"type": "string"}, "versions": {"type": "array", "items": {"type": "string"}}}, "required": ["latest", "versions"]}, "PaginatedJobList": {"type": "object", "required": ["total_results_count", "jobs"], "properties": {"page_size": {"type": "integer", "example": 50}, "page_number": {"type": "integer", "example": 3}, "page_results_count": {"type": "integer", "example": 50}, "total_results_count": {"type": "integer", "example": 3}, "jobs": {"type": "array", "items": {"$ref": "#/components/schemas/Job"}}}}, "PaginatedStixObjectsList": {"type": "object", "required": ["total_results_count", "objects"], "properties": {"page_size": {"type": "integer", "example": 50}, "page_number": {"type": "integer", "example": 3}, "page_results_count": {"type": "integer", "example": 50}, "total_results_count": {"type": "integer", "example": 3}, "objects": {"type": "array", "items": {"$ref": "#/components/schemas/StixObjects"}}}}, "StateEnum": {"enum": ["pending", "processing", "completed", "failed"], "type": "string"}, "StixObjects": {"type": "object", "properties": {"type": {"type": "string"}, "id": {"type": "string"}}, "required": ["id", "type"]}, "TypeEnum": {"enum": ["attack-update", "cwe-update", "capec-update", "arango-cti-processor", "atlas-update", "location-update", "tlp-update", "disarm-update"], "type": "string"}}, "securitySchemes": {"api_key": {"type": "apiKey", "in": "header", "name": "API-KEY"}}}, "tags": [{"name": "ATT&CK Enterprise", "description": "Manage and search MITRE ATT&CK Enterprise objects."}, {"name": "ATT&CK ICS", "description": "Manage and search MITRE ATT&CK ICS objects."}, {"name": "ATT&CK Mobile", "description": "Manage and search MITRE ATT&CK Mobile objects."}, {"name": "CAPEC", "description": "Manage and search MITRE CAPEC objects."}, {"name": "CWE", "description": "Manage and search MITRE CWE objects."}, {"name": "DISARM", "description": "Manage and search MITRE DISARM objects."}, {"name": "ATLAS", "description": "Manage and search MITRE ATLAS objects."}, {"name": "Location", "description": "Manage and search Location objects."}, {"name": "TLP", "description": "Manage and search TLP objects."}, {"name": "Objects", "description": "Explore all STIX Objects in the database."}, {"name": "Arango CTI Processor", "description": "Trigger the generation of relationships between objects."}, {"name": "Jobs", "description": "Search through Jobs triggered when downloading data and creating relationships."}], "security": [{"api_key": []}]}